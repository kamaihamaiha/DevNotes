apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: '../version.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    // 配置签名信息
    signingConfigs {
        release {
            keyAlias 'app'
            keyPassword '1  23456'
            storeFile file('./app.jks')
            storePassword '123456'
        }
    }

    defaultConfig {
        applicationId "cn.kk.customeview"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    kotlinOptions{
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            // 引用配置的签名信息
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // flavors 维度
    flavorDimensions "size", "google", "baidu"

    productFlavors {
        google {
            dimension "google"
            applicationIdSuffix ".google"
            versionNameSuffix "-google"
            buildConfigField 'String','HOME_URL','"http://www.google.com"'
            // 添加自定义资源
            resValue 'string','channel_tips','"Google 欢迎你"'
        }

        baidu {
            dimension "baidu"
            buildConfigField 'String','HOME_URL','"http://www.baidu.com"'
            // 添加自定义资源
            resValue 'string','channel_tips','"Baidu 欢迎你"'
        }
        big {
            dimension "size"
        }
        small {
            dimension "size"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            if ('release'.equals(variant.buildType.name)) {
                def apkFileName = "custom-view_${flavorName}_${variant.versionName}_${buildTime()}.apk"
                outputFileName = apkFileName
            }

        }
    }
}

def buildTime(){
    def date = new Date()
    def fmtDate = date.format('yyyyMMdd-HH:MM:SS')
    return fmtDate
}

dependencies {
    api project(path: ':elementary')
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.viewpager2:viewpager2:1.0.0"


    api project(path: ':base')
}